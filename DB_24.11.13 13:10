 use DB_2020112169;
show tables;
-- 유저 테이블에 비밀번호,나이,성별,키,체중,병력,체중 관리,목표 체중, 식단 관리목표 col 추가
CREATE TABLE UserInfo (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,    -- 비밀번호 저장
    age INT,                           -- 나이(세)
    gender ENUM('남', '여'),            -- 성별
    height DECIMAL(5, 2),              -- 키 (xxx.xx)
    weight DECIMAL(5, 2),              -- 체중 (xxx.xx)
    medical_history TEXT,              -- 병력
    allergy_info ENUM( '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
        '11', '12', '13', '14', '15', '16', '17', '18', '19',
        '20', '21', '22'),
    -- 1: 난류(계란), 2: 우유, 3: 메밀, 4: 땅콩, 5: 대두(콩), 6: 밀,
    -- 7: 고등어, 8: 게, 9: 새우, 10: 돼지고기, 11: 복숭아, 12: 토마토,
    -- 13: 아황산류, 14: 호두, 15: 닭고기, 16: 쇠고기, 17: 오징어, 18: 조개류(전복, 굴, 홍합 등),
    -- 19: 잣, 20: 잉어, 21: 새송이 버섯, 22: 복어'                 -- 알레르기 정보
    weight_management ENUM('감량', '유지', '증량'),  -- 체중 관리
    target_weight DECIMAL(5, 2),       -- 목표 체중 (xxx.xx)
    diet_goal ENUM('1', '2', '3', '4', '5', '6'),  -- 식단 관리 목표
    -- (1:체중 조절 2:건강 증진 3:근력 강화 4:알레르기 예방 5:개인 건강 문제 6:기타)
    diet_goal_additional TEXT          -- 식단 목표 추가 텍스트 (6일 경우 사용)
);

-- 식단 기록 테이블 (record_id 삭제, allergy_info 추가)
CREATE TABLE MealRecord (
    -- record_id INT PRIMARY KEY AUTO_INCREMENT, 불필요한것으로 고려되어 삭제
    user_id INT,
    date DATE NOT NULL,
    meal_time ENUM('아침', '점심', '저녁', '간식') NOT NULL,
    food_type VARCHAR(100),
    intake_amount DECIMAL(5, 2),  -- 섭취량
    calories INT,
    protein DECIMAL(5, 2),  -- 단백질
    fat DECIMAL(5, 2),      -- 지방
    carbohydrates DECIMAL(5, 2), -- 탄수화물
    allergy_info ENUM( '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
        '11', '12', '13', '14', '15', '16', '17', '18', '19',
        '20', '21', '22'),
    -- 1: 난류(계란), 2: 우유, 3: 메밀, 4: 땅콩, 5: 대두(콩), 6: 밀,
    -- 7: 고등어, 8: 게, 9: 새우, 10: 돼지고기, 11: 복숭아, 12: 토마토,
    -- 13: 아황산류, 14: 호두, 15: 닭고기, 16: 쇠고기, 17: 오징어, 18: 조개류(전복, 굴, 홍합 등),
    -- 19: 잣, 20: 잉어, 21: 새송이 버섯, 22: 복어'
    FOREIGN KEY (user_id) REFERENCES UserInfo(user_id),
    index (allergy_info)
);

-- 음식 데이터 테이블
CREATE TABLE FoodData (
    food_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    calories INT NOT NULL, -- 칼로리
    protein DECIMAL(5, 2),   -- 단백질
    fat DECIMAL(5, 2),       -- 지방
    carbohydrates DECIMAL(5, 2), -- 탄수화물
        allergy_info ENUM( '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
        '11', '12', '13', '14', '15', '16', '17', '18', '19',
        '20', '21', '22')
    -- 1: 난류(계란), 2: 우유, 3: 메밀, 4: 땅콩, 5: 대두(콩), 6: 밀,
    -- 7: 고등어, 8: 게, 9: 새우, 10: 돼지고기, 11: 복숭아, 12: 토마토,
    -- 13: 아황산류, 14: 호두, 15: 닭고기, 16: 쇠고기, 17: 오징어, 18: 조개류(전복, 굴, 홍합 등),
    -- 19: 잣, 20: 잉어, 21: 새송이 버섯, 22: 복어'       -- 알레르기 성분
);

CREATE TABLE GoalTargets (
    goal_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,                       -- UserInfo 테이블과의 연결을 위한 user_id
    calories_target INT,               -- 목표 칼로리
    carbohydrates_target INT,          -- 목표 탄수화물
    protein_target INT,                -- 목표 단백질
    fat_target INT,                    -- 목표 지방
    achieved BOOLEAN DEFAULT FALSE,    -- 달성 여부 (TRUE: 달성, FALSE: 미달성)
    target_date DATE NOT NULL,         -- 목표가 설정된 날짜
    FOREIGN KEY (user_id) REFERENCES UserInfo(user_id)
);



/*추천 데이터는 테이블이 필요 없다고 고려되어 삭제
-- 추천 데이터 테이블
CREATE TABLE Recommendation (
    recommendation_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    recommendation_datetime DATETIME NOT NULL,
    recommended_foods TEXT,  -- 추천 음식 목록
    recommendation_reason TEXT, -- 추천 이유 (알레르기 회피, 부족 영양소 섭취 등)
    FOREIGN KEY (user_id) REFERENCES UserInfo(user_id)
);*/
/*
변수로 저장하고, 테이블은 삭제
-- 알레르기 정보 테이블
CREATE TABLE AllergyInfo (
    allergy_id INT PRIMARY KEY AUTO_INCREMENT,
    allergy_name VARCHAR(100) NOT NULL,
    description TEXT
);*/
/*
변수로 저장하고, 테이블은 삭제
-- 음식-알레르기 연관 테이블
CREATE TABLE FoodAllergy (
    food_id INT,
    allergy_id INT,
    FOREIGN KEY (food_id) REFERENCES FoodData(food_id),
    FOREIGN KEY (allergy_id) REFERENCES AllergyInfo(allergy_id),
    PRIMARY KEY (food_id, allergy_id)
);
*/
#  show tables;
#  show databases;
#  use DB_2020112169;
#  show tables;
#
#  drop table if exists AllergyInfo,FoodAllergy,FoodData,MealRecord,Recommendation,UserInfo,GoalTargets;
